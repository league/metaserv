<?^open Num let width = 54
   let rec wrap puts s = 
     if String.length s <= width then puts s else
      (puts (Str.string_before s width); puts "\n";
       wrap puts (Str.string_after s width))
   let zero = eq_num (Int 0)
   let square x = .<let z = .~x in z */ z>.
   let rec power n x = (*@\label{line:power-fun}@*)
     if zero n then .<Int 1>.
     else if zero (mod_num n (Int 2))
       then square(power (n//Int 2) x)
       else .< .~x */ .~(power (n -/ Int 1) x)>. 
 ?>
<?pragma args y ?>
<?~let y'= lift(string_of_num y) (*@\label{powerlift}@*)?>
<? let x'= match (arg "x") with
     Some v -> v | None -> "2" ?>
<?=preamble(x'^"^"^y')(*@\label{line:power-preamble}@*)?>
<?~=lift(navbar("/power"^string_of_num y))?>
<form method="get">
  This page computes 
  <input name="x" type="text" value="<?=x'?>" size="20" />
  <sup><?=y'?></sup>
</form>
<?~let result = power y .<num_of_string x'>.(*@\label{line:power-num}@*)?>
<p>The result is: 
<pre><?wrap puts (string_of_num result) ?></pre></p>
<?=postamble?>
