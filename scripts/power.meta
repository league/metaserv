<?pragma args y ?>
<?^  (* this pages computes x^y, 
        where y is an early argument, and x is late. *)
  open Num
  let zero = eq_num (Int 0)
  let even n = zero (mod_num n (Int 2))
  let square' x = (x */ x)
  let square x = .<let y = .~x in square' y>.
  let rec power' n x = 
    if zero n then .<Int 1>.
    else if even n then square(power' (n//Int 2) x)
    else .<.~x*/ .~(power' (n-/Int 1) x)>.

  let num = string_of_num
  let max = 64
  let rec wrap puts s = 
    if String.length s <= max then puts s
    else (puts (Str.string_before s max);
          puts "\n";
          wrap puts (Str.string_after s max))
 ?>

<?let x = match arg "x" with 
          Some x -> num_of_string x
        | None -> Int 2 
 ?>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title><?=num x?>^<?=num y?></title>
    <link href="/meta.css" rel="stylesheet" type="text/css" />
  </head>
<body>

<h1>Staged power function: x^<?=num y?></h1>
<p><form method="get">
where x= <input name="x" type="text" value="<?=num x?>" size="24">
<input type="submit">
</form></p>

<?~let result = power' y .<x>. ?>
<p>
Result is:
<pre>
<? wrap puts (num result) ?>
</p>

<hr/>
MetaOCaml <?=Sys.ocaml_version?>
</body>
</html>
